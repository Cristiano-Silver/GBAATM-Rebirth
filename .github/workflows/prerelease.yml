name: Release on Tag
on:
  push:
    tags:
      - 'pre*' # Push events to matching v*, i.e. v1.0, v20.15.10
    # Pick a branch to generate a new build
    #branches: [ master ]
  
jobs:
  # We define the commit hash and also create the release just once or there are errors
  create-release:
    runs-on: ubuntu-latest
    outputs:
      # We can access this values in the other jobs
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      #sha_short: ${{ steps.vars.outputs.sha_short }}
    steps:
    # This enable to get the commit and can be used for nightly or dev builds
    #- name: Checkout repo
    #  uses: actions/checkout@v2
    #- name: Declare Commit Hash
    #  id: vars
    #  shell: bash
    #  run: |
    #    echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true

  build-ubuntu:
    runs-on: ubuntu-latest
    # We import the values of the other jobs
    needs: [create-release]
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
    - name: Makefile
      run: mkdir build && cd build && qmake -makefile -o Makefile "CONFIG+=release" ../GBAATM-Rebirth.pro
    - name: Build
      run: cd build && make
    - name: Package project 
    # junk paths remove to recreate the path where is the file inside the zip package
      run: |
        zip --junk-paths linux build/GBAATM-Rebirth
    - name: Upload Release Asset
    # We upload the binaries to the previous release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./linux.zip
        asset_name: linux-${{ github.ref }}-GBAATM-rebirth.zip
        asset_content_type: application/zip

  build-windows:
    runs-on: windows-latest
    needs: [create-release]
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
    # This is required or cannot compile it
        arch: win64_mingw73
    - name: Makefile
      run: mkdir build && cd build && qmake -makefile -o Makefile "CONFIG+=release" ../GBAATM-Rebirth.pro
    - name: Build
      run: cd build && make
    - name: Package project 
      # Path to the build is different in windows, also the command
      run: |
        Compress-Archive -Path "build/release/GBAATM-Rebirth.exe" -DestinationPath windows.zip
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./windows.zip
        asset_name: windows-${{ github.ref }}-GBAATM-rebirth.zip
        asset_content_type: application/zip

  build-macos:
    runs-on: macos-latest
    needs: [create-release]
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
    - name: Makefile
      run: mkdir build && cd build && qmake -makefile -o Makefile "CONFIG+=release" ../GBAATM-Rebirth.pro
    - name: Build
    # macdeployqt is required to generate the dmg, compile is not enough
      run: cd build && make && macdeployqt ./GBAATM-Rebirth.app -dmg
    - name: Package project 
      # The command is different to Linux so require also the file extension
      run: |
        zip --junk-paths osx.zip ./build/GBAATM-Rebirth.dmg
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: osx.zip
        asset_name: osx-${{ github.ref }}-GBAATM-rebirth.zip
        asset_content_type: application/zip
