name: Release on Tag
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches: [ master ]
  
jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      sha_short: ${{ steps.vars.outputs.sha_short }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Declare some variables
      id: vars
      shell: bash
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.vars.outputs.sha_short }}
        release_name: Release ${{ steps.vars.outputs.sha_short }}
        draft: false
        prerelease: false

  build-ubuntu:

    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
    - name: Makefile
      run: mkdir build && cd build && qmake -makefile -o Makefile "CONFIG+=release" ../GBAATM-Rebirth.pro
    - name: Build
      run: cd build && make
    - name: Build project 
      run: |
        zip --junk-paths linux build/GBAATM-Rebirth
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./linux.zip
        asset_name: linux-${{ needs.create-release.outputs.sha_short }}-GBAATM-rebirth.zip
        asset_content_type: application/zip

  build-windows:

    runs-on: windows-latest
    needs: [create-release]
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        arch: win64_mingw73
    - name: Makefile
      run: mkdir build && cd build && qmake -makefile -o Makefile "CONFIG+=release" ../GBAATM-Rebirth.pro
    - name: Build
      run: cd build && make && ls
    - name: Build project 
      run: |
        zip --junk-paths windows build/GBAATM-Rebirth.exe
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./windows.zip
        asset_name: windows-${{ needs.create-release.outputs.sha_short }}-GBAATM-rebirth.zip
        asset_content_type: application/zip

  build-macos:

    runs-on: macos-latest
    needs: [create-release]
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
    - name: Makefile
      run: mkdir build && cd build && qmake -makefile -o Makefile "CONFIG+=release" ../GBAATM-Rebirth.pro
    - name: Build
      run: cd build && make
    - name: Build project 
      run: |
        zip osx.zip ./build
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: osx.zip
        asset_name: osx-${{ needs.create-release.outputs.sha_short }}-GBAATM-rebirth.zip
        asset_content_type: application/zip
